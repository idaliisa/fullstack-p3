{"version":3,"sources":["components/PersonForm.js","components/Person.js","components/Persons.js","services/phonebook.js","components/Notification.js","App.js","index.js"],"names":["PersonForm","props","onSubmit","value","newName","onChange","handleNameChange","newPhone","handlePhoneChange","type","Person","person","name","number","onClick","handleClick","id","Persons","persons","map","key","newObject","axios","post","then","response","data","get","delete","Notification","message","className","App","useState","setPersons","setNewName","setNewPhone","notificationMessage","setNotificationMessage","useEffect","phonebookService","initialContacts","event","preventDefault","some","n","window","alert","returnedContact","concat","setTimeout","target","confirm","ReactDOM","render","document","getElementById"],"mappings":"mNAmBeA,EAjBI,SAACC,GAChB,OACI,0BAAMC,SAAUD,EAAMC,UAClB,sCACU,2BAAOC,MAAOF,EAAMG,QAASC,SAAUJ,EAAMK,oBAEvD,wCACY,2BAAOH,MAAOF,EAAMM,SAAUF,SAAUJ,EAAMO,qBAE1D,6BACI,4BAAQC,KAAK,UAAb,UCFDC,EARA,SAACT,GACZ,OACI,2BACCA,EAAMU,OAAOC,KADd,IACqBX,EAAMU,OAAOE,OAAO,4BAAQC,QAASb,EAAMc,YAAaC,GAAIf,EAAMU,OAAOK,GAAIJ,KAAMX,EAAMU,OAAOC,MAA5E,YCQlCK,EAVC,SAAChB,GACb,OACI,6BACKA,EAAMiB,QAAQC,KAAI,SAAAR,GAAM,OACrB,kBAAC,EAAD,CAAQS,IAAKT,EAAOC,KAAMD,OAAUA,EAAQI,YAAad,EAAMc,mB,gBCUhE,EAdA,SAAAM,GAEX,OADgBC,IAAMC,KAHV,eAGwBF,GACrBG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAY9B,EATA,WAEX,OADgBJ,IAAMK,IARV,gBASGH,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAO9B,EAJA,SAACV,GACZM,IAAMM,OAAN,UAbY,eAaZ,YAA2BZ,KCFhBa,EAVM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACK,KAIP,yBAAKC,UAAU,gBAAgBD,IC2EtBE,EA7EH,WAAO,IAAD,EACeC,mBAAS,CACtC,CAAErB,KAAM,cACNC,OAAQ,iBAHI,mBACRK,EADQ,KACCgB,EADD,OAMgBD,mBAAS,IANzB,mBAMR7B,EANQ,KAMC+B,EAND,OAOkBF,mBAAS,IAP3B,mBAOR1B,EAPQ,KAOE6B,EAPF,OAQuCH,mBAAS,MARhD,mBAQRI,EARQ,KAQaC,EARb,KAUhBC,qBAAU,WACRC,IAEKhB,MAAK,SAAAiB,GACJP,EAAWO,QAEhB,IAiDH,OACE,6BACE,yCACA,iDACA,kBAAC,EAAD,CAAcX,QAASO,IACvB,kBAAC,EAAD,CAAYnC,SApDG,SAACwC,GAChBA,EAAMC,iBACN,IAAMtB,EAAY,CACdT,KAAMR,EACNS,OAAQN,GAEZW,EAAQ0B,MAAK,SAAAC,GAAC,OAAIA,EAAEjC,OAASR,KAC7B0C,OAAOC,MAAP,UAAgB3C,EAAhB,mCACAoC,EACOnB,GACJG,MAAK,SAAAwB,GACJd,EAAWhB,EAAQ+B,OAAOD,OAG9BV,EAAuB,SAAD,OAAUlC,IAChC8C,YAAW,WACTZ,EAAuB,QACtB,KAEHH,EAAW,IACXC,EAAY,KAgCsBhC,QAASA,EAASE,iBAb/B,SAACoC,GACtBP,EAAWO,EAAMS,OAAOhD,QAYgEI,SAAUA,EAAUC,kBATtF,SAACkC,GACzBN,EAAYM,EAAMS,OAAOhD,UASvB,uCACA,kBAAC,EAAD,CAASY,YA9BS,SAAC2B,GACrBA,EAAMC,iBACFG,OAAOM,QAAP,iBAAyBV,EAAMS,OAAOvC,KAAtC,OACF4B,EACUE,EAAMS,OAAOnC,IAGzBwB,IAEKhB,MAAK,SAAAiB,GACJP,EAAWO,OAoBsBvB,QAASA,M,MCzEpDmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.8e106230.chunk.js","sourcesContent":["import React from 'react';\n\nconst PersonForm = (props) => {\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name: <input value={props.newName} onChange={props.handleNameChange}/>    \n            </div>\n            <div>\n                number: <input value={props.newPhone} onChange={props.handlePhoneChange}/>    \n            </div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\n\nexport default PersonForm","import React from 'react';\n\nconst Person = (props) => {\n    return (         \n        <p>\n        {props.person.name} {props.person.number}<button onClick={props.handleClick} id={props.person.id} name={props.person.name}>delete</button>\n        </p>                                   \n    )\n}\n\nexport default Person","import React from 'react';\nimport Person from './Person'\n\nconst Persons = (props) => {\n    return (\n        <div>          \n            {props.persons.map(person =>                  \n                <Person key={person.name} person = {person} handleClick={props.handleClick}/>        \n            )}         \n        </div>\n    )\n}\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst remove = (id) => {\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nexport default {create, getAll, remove}","import React from 'react';\n\nconst Notification = ({ message }) => {\n    if (message === null) {\n      return null\n    }\n  \n    return (\n      <div className=\"notification\">{message}</div>\n    )\n  }\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport phonebookService from './services/phonebook'\nimport Notification from './components/Notification'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([\n    { name: 'Arto Hellas',\n      number: '040-1234567'      \n   }\n  ]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ notificationMessage, setNotificationMessage] = useState(null)\n\n  useEffect(() => {\n    phonebookService\n      .getAll()\n        .then(initialContacts => {\n          setPersons(initialContacts)\n        })\n  }, [])\n\n  const addContact = (event) => {\n      event.preventDefault()\n      const newObject = {\n          name: newName,\n          number: newPhone\n      }\n      persons.some(n => n.name === newName) ?\n      window.alert(`${newName} is already added to phonebook`) :      \n      phonebookService.\n      create(newObject)\n        .then(returnedContact => {\n          setPersons(persons.concat(returnedContact))\n        }) \n\n      setNotificationMessage(`Added ${newName}`)\n      setTimeout(() => {\n        setNotificationMessage(null)\n      }, 5000)\n        \n      setNewName('') \n      setNewPhone('') \n  }\n\n\n  const deleteContact = (event) => {\n    event.preventDefault()\n    if (window.confirm(`Delete ${event.target.name}?`)) {\n      phonebookService\n        .remove(event.target.id)\n    }\n    \n    phonebookService\n      .getAll()\n        .then(initialContacts => {\n          setPersons(initialContacts)\n        })\n\n  }\n\n  const handleNameChange = (event) => {\n      setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <h3>Add a new contact</h3>\n      <Notification message={notificationMessage}/>\n      <PersonForm onSubmit={addContact} newName={newName} handleNameChange={handleNameChange} newPhone={newPhone} handlePhoneChange={handlePhoneChange}/>\n      <h3>Numbers</h3>\n      <Persons handleClick={deleteContact} persons={persons} />\n    </div>\n  )\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}